/* eslint-disable */
// This document was generated automatically by openapi-box

/**
 * @typedef {import('@sinclair/typebox').TSchema} TSchema
 */

/**
 * @template {TSchema} T
 * @typedef {import('@sinclair/typebox').Static<T>} Static
 */

/**
 * @typedef {{
 *  [Path in keyof schema]: {
 *    [Method in keyof typeof schema[Path]]: {
 *      args: Static<typeof schema[Path][Method]['args']>
 *      data?: Static<typeof schema[Path][Method]['data']>
 *      error?: Static<typeof schema[Path][Method]['error']>
 *    }
 *  }
 * }} Paths
 */

/**
 * @typedef {{
 *  [ComponentType in keyof _components]: {
 *    [ComponentName in keyof _components[ComponentType]]: Static<_components[ComponentType][ComponentName]>
 *  }
 * }} components
 */

/** @typedef {Json[]} JsonArray */
/** @typedef {{ [key: string | number]: Json }} JsonRecord */
/** @typedef {string} JsonString */
/** @typedef {number} JsonNumber */
/** @typedef {boolean} JsonBoolean */
/** @typedef {null} JsonNull */
/** @typedef {JsonArray | JsonRecord | JsonString | JsonNumber | JsonBoolean | JsonNull} Json */

import { Type as T } from '@sinclair/typebox'

/**
 * @params {object} [options]
 * @returns {ReturnType<typeof T.Unsafe<Json>>}
 */
const Json = (options) => T.Unsafe(T.Any(options))

const cache = {}
cache['03e858838eb430edda802cc71646963b'] = T.Optional(
  T.Integer({ format: 'int32', 'x-in': 'query' })
)
cache['723300ad0470e6ce673b85751ba5bcc7'] = {
  limit: cache['03e858838eb430edda802cc71646963b']
}
cache['5bfbeb4f1040ffcb05449e459a2b6e29'] = {
  id: T.Integer({ format: 'int64' }),
  name: T.String(),
  tag: T.Optional(T.String())
}
cache['e7066718f2cec7911b7492b026db3603'] = T.Object(
  cache['5bfbeb4f1040ffcb05449e459a2b6e29']
)
cache['ac3205be0e87bb06e17139ad412c51f8'] = {
  code: T.Integer({ format: 'int32' }),
  message: T.String()
}
cache['a09d70c81606db20589569c60c981b9a'] = T.String({ 'x-in': 'path' })
cache['5813dcb66e7e849794b7e10cf18cc4b4'] = {
  petId: cache['a09d70c81606db20589569c60c981b9a']
}
cache['07e889497aac2beab329a2eb5fc61dcc'] = T.Integer({
  format: 'int32',
  'x-in': 'query'
})
cache['c79bf6c101e6f1ae8d144f277145f13b'] = T.Integer({
  format: 'int32',
  'x-in': 'query'
})

const schema = {
  '/pets': {
    GET: {
      args: T.Optional(
        T.Object({
          query: T.Optional(T.Object(cache['723300ad0470e6ce673b85751ba5bcc7']))
        })
      ),
      data: T.Array(cache['e7066718f2cec7911b7492b026db3603'], {
        'x-status-code': '200',
        'x-content-type': 'application/json'
      }),
      error: T.Union([
        T.Object(cache['ac3205be0e87bb06e17139ad412c51f8'], {
          'x-status-code': 'default',
          'x-content-type': 'application/json'
        })
      ])
    },
    POST: {
      args: T.Void(),
      data: T.Any({ 'x-status-code': '201' }),
      error: T.Union([
        T.Object(cache['ac3205be0e87bb06e17139ad412c51f8'], {
          'x-status-code': 'default',
          'x-content-type': 'application/json'
        })
      ])
    }
  },
  '/pets/{petId}': {
    GET: {
      args: T.Object({
        params: T.Object(cache['5813dcb66e7e849794b7e10cf18cc4b4'])
      }),
      data: T.Object(cache['5bfbeb4f1040ffcb05449e459a2b6e29'], {
        'x-status-code': '200',
        'x-content-type': 'application/json'
      }),
      error: T.Union([
        T.Object(cache['ac3205be0e87bb06e17139ad412c51f8'], {
          'x-status-code': 'default',
          'x-content-type': 'application/json'
        })
      ])
    }
  }
}

const _components = {
  parameters: {
    skipParam: cache['07e889497aac2beab329a2eb5fc61dcc'],
    limitParam: cache['c79bf6c101e6f1ae8d144f277145f13b']
  },
  responses: {
    NotFound: T.Any({}),
    IllegalInput: T.Any({}),
    GeneralError: T.Object(cache['ac3205be0e87bb06e17139ad412c51f8'], {
      'x-content-type': 'application/json'
    })
  },
  requestBodies: {
    Pet: T.Object(cache['5bfbeb4f1040ffcb05449e459a2b6e29'], {
      'x-content-type': 'application/json'
    })
  },
  schemas: {
    Error: T.Object(cache['ac3205be0e87bb06e17139ad412c51f8']),
    Pet: T.Object(cache['5bfbeb4f1040ffcb05449e459a2b6e29']),
    Pets: T.Array(cache['e7066718f2cec7911b7492b026db3603'])
  }
}

export { schema, _components as components }
